[{"/Users/user/Desktop/SOLO_MVP/client/src/index.js":"1","/Users/user/Desktop/SOLO_MVP/client/src/reportWebVitals.js":"2","/Users/user/Desktop/SOLO_MVP/client/src/App.js":"3"},{"size":535,"mtime":1686205730064,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1686189642816,"results":"6","hashOfConfig":"5"},{"size":2797,"mtime":1686218247212,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m7wogu",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/user/Desktop/SOLO_MVP/client/src/index.js",[],[],"/Users/user/Desktop/SOLO_MVP/client/src/reportWebVitals.js",[],[],[],"/Users/user/Desktop/SOLO_MVP/client/src/App.js",["19","20"],[],"import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [backendData, setBackendData] = useState([]);\n  const [chatData, setChatData] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     const response = await fetch(\"http://localhost:3000/api\");\n  //     console.log(response);\n  //     const data = await response.json();\n  //     console.log(data);\n  //     setBackendData(data);\n  //     console.log(data);\n  //   }\n  //   fetchData();\n  // }, []);\n\n  useEffect(() => {\n    async function fetchChatData() {\n      const response = await fetch(\"http://localhost:3000/api/chat\");\n      const data = await response.json();\n      setChatData(data);\n      console.log(data);\n    }\n    fetchChatData();\n  }, []);\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const handleSend = () => {\n    // メッセージと日時をサーバーに送信\n    const timestamp = new Date().toISOString();\n    fetch(\"http://localhost:3000/api/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name, message, timestamp }),\n    })\n      .then((response) => response.json())\n      .then((newMessage) => {\n        // 送信後に表示を更新\n        setChatData([...chatData, newMessage]);\n        console.log(newMessage);\n        setMessage(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error sending chat message:\", error);\n      });\n  };\n\n  return (\n    <div>\n      {/* {typeof backendData.users === \"undefined\" ? (\n        <p>Loading...</p>\n      ) : (\n        backendData.users.map((user, i) => <p key={i}>{user}</p>)\n      )} */}\n      <h1>＜EV時代を考える＞</h1>\n      <h2>※マナーを守って投稿しましょう</h2>\n      {chatData.map((message, i) => (\n        <div key={i} style={{ display: \"flex\", marginBottom: \"10px\" }}>\n          <span style={{ marginRight: \"2ch\" }}>名前:【 {message.name} 】</span>\n          <span style={{ marginRight: \"2ch\" }}>\n            メッセージ: 『 {message.message} 』\n          </span>\n          <span>投稿日時: {message.created_at}</span>\n        </div>\n      ))}\n\n      <div>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={handleNameChange}\n          placeholder=\"ここに名前\"\n        />\n\n        <input\n          type=\"text\"\n          value={message}\n          onChange={handleMessageChange}\n          placeholder=\"ここにメッセージ\"\n        />\n\n        <button onClick={handleSend}>投稿！！</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"21","severity":1,"message":"22","line":4,"column":10,"nodeType":"23","messageId":"24","endLine":4,"endColumn":21},{"ruleId":"21","severity":1,"message":"25","line":4,"column":23,"nodeType":"23","messageId":"24","endLine":4,"endColumn":37},"no-unused-vars","'backendData' is assigned a value but never used.","Identifier","unusedVar","'setBackendData' is assigned a value but never used."]